{"version":3,"sources":["../../src/config/passport.js"],"names":["module","exports","passport","use","usernameField","passwordField","email","password","done","findOne","then","user","authenticate","reflect","err"],"mappings":"AAAA;;AAEA;;;;AACA;;;;;;AAGAA,OAAOC,OAAP,GAAiB,YAAI;AACnBC,WAASC,GAAT,CAAa,4BAAkB;AAC7BC,mBAAe,OADc;AAE7BC,mBAAe;AAFc,GAAlB,EAGX,UAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAyB;AACzB,sBAAQC,OAAR,CAAgB,EAACH,OAAOA,KAAR,EAAhB,EAAgCI,IAAhC,CAAqC,UAACC,IAAD,EAAQ;AAC3C,UAAGA,QAAQA,KAAKC,YAAL,CAAkBL,QAAlB,CAAX,EACEC,KAAKG,IAAL,EADF,KAGEH,KAAK,KAAL;AACH,KALD,EAKGK,OALH,CAKW,UAACC,GAAD,EAAO;AAChBN,WAAK,KAAL;AACD,KAPD;AAQD,GAZY,CAAb;AAaD,CAdD","file":"passport.js","sourcesContent":["\"use strict\";\n\nimport Company from '../schemas/example';\nimport LocalStrategy from 'passport-local';\n\n\nmodule.exports = ()=>{\n  passport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password'\n  },(email, password, done)=>{\n    Company.findOne({email: email}).then((user)=>{\n      if(user && user.authenticate(password))\n        done(user)\n      else\n        done(false)\n    }).reflect((err)=>{\n      done(false)\n    })\n  }))\n}"]}